// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/daidai53/webook/interactive/grpc"
	"github.com/daidai53/webook/interactive/ioc"
	"github.com/daidai53/webook/interactive/repository"
	"github.com/daidai53/webook/interactive/repository/cache"
	"github.com/daidai53/webook/interactive/repository/dao"
	"github.com/google/wire"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitApp() *App {
	loggerV1 := ioc.InitLogger()
	db := ioc.InitDB(loggerV1)
	interactiveDAO := dao.NewGORMInteractiveDAO(db)
	cmdable := ioc.InitRedisClient()
	interactiveCache := cache.NewInteractiveRedisCache(cmdable)
	topLikesArticleCache := cache.NewTopLikesCache(cmdable, loggerV1)
	interactiveRepository := repository.NewCachedInteractiveRepository(interactiveDAO, interactiveCache, topLikesArticleCache, loggerV1)
	interactiveRepoServiceServer := grpc.NewInteractiveRepoServiceServer(interactiveRepository)
	server := ioc.NewGrpcxServerV1(interactiveRepoServiceServer)
	app := &App{
		server: server,
	}
	return app
}

// wire.go:

var thirdPartySet = wire.NewSet(ioc.InitDB, ioc.InitRedisClient, ioc.InitLogger, ioc.InitSaramaClient)

var interactiveSvcSet = wire.NewSet(dao.NewGORMInteractiveDAO, cache.NewInteractiveRedisCache, cache.NewTopLikesCache, repository.NewCachedInteractiveRepository)
