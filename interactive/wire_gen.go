// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/daidai53/webook/interactive/events"
	"github.com/daidai53/webook/interactive/grpc"
	"github.com/daidai53/webook/interactive/ioc"
	"github.com/daidai53/webook/interactive/repository"
	"github.com/daidai53/webook/interactive/repository/cache"
	"github.com/daidai53/webook/interactive/repository/dao"
	"github.com/daidai53/webook/interactive/service"
	"github.com/google/wire"
)

import (
	_ "github.com/spf13/viper/remote"
)

// Injectors from wire.go:

func InitApp() *App {
	srcDB := ioc.InitSrcDB()
	dstDB := ioc.InitDstDB()
	loggerV1 := ioc.InitLogger()
	doubleWritePool := ioc.InitDoubleWritePool(srcDB, dstDB, loggerV1)
	db := ioc.InitBizDB(doubleWritePool)
	interactiveDAO := dao.NewGORMInteractiveDAO(db)
	cmdable := ioc.InitRedisClient()
	interactiveCache := cache.NewInteractiveRedisCache(cmdable)
	topLikesArticleCache := cache.NewTopLikesCache(cmdable, loggerV1)
	interactiveRepository := repository.NewCachedInteractiveRepository(interactiveDAO, interactiveCache, topLikesArticleCache, loggerV1)
	client := ioc.InitSaramaClient()
	interactiveReadEventConsumer := events.NewInteractiveReadEventConsumer(interactiveRepository, client, loggerV1)
	consumer := ioc.InitFixerConsumer(client, loggerV1, srcDB, dstDB)
	v := ioc.InitConsumers(interactiveReadEventConsumer, consumer)
	interactiveService := service.NewInteractiveService(interactiveRepository)
	interactiveServiceServer := grpc.NewInteractiveServiceServer(interactiveService)
	server := ioc.NewGrpcxServer(interactiveServiceServer)
	syncProducer := ioc.InitSaramaSyncProducer(client)
	producer := ioc.InitInteractiveProducer(syncProducer)
	ginxServer := ioc.InitGinxServer(loggerV1, srcDB, dstDB, doubleWritePool, producer)
	app := &App{
		consumers:   v,
		server:      server,
		adminServer: ginxServer,
	}
	return app
}

// wire.go:

var thirdPartySet = wire.NewSet(ioc.InitDstDB, ioc.InitSrcDB, ioc.InitDoubleWritePool, ioc.InitBizDB, ioc.InitSaramaSyncProducer, ioc.InitRedisClient, ioc.InitLogger, ioc.InitSaramaClient)

var interactiveSvcSet = wire.NewSet(dao.NewGORMInteractiveDAO, cache.NewInteractiveRedisCache, cache.NewTopLikesCache, repository.NewCachedInteractiveRepository, service.NewInteractiveService)
